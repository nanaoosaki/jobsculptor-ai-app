---
description: 
globs: 
alwaysApply: true
---
# File Dependency Management for Resume Tailoring Application

## Purpose
This document serves as a guideline to maintain and manage file dependencies within the resume tailoring application. It ensures that future development does not break existing dependencies and maintains the integrity of the application.

## Key Modules and Their Dependencies

### resume_index.py
- **Purpose**: Tracks and logs resume processing details.
- **Key Functions**: `add_resume`, `add_note`, `add_processing_record`, `get_resume_info`.
- **Interactions**: Used by `tailoring_handler.py` and indirectly by `claude_integration.py`.
- **Dependencies**: `os`, `json`, `logging`, `datetime`, `threading`.
- **File Structure**: Stores data in `resume_index.json`.

### Styling Workflow
- **SCSS and CSS**: Core styling files include `static/scss/_resume.scss`, `static/scss/preview.scss`, `static/scss/print.scss`.
- **Build Process**: Utilizes `sass` for compiling SCSS to CSS and `generate_tokens_css.py` for token generation.

## Best Practices
- **Do Not Edit Compiled CSS Directly**: Always modify SCSS files and recompile.
- **Restart Flask Server**: After changes to Python files, restart the server to apply changes.
- **Document Changes**: Update documentation for any new dependencies or changes in existing ones.

## Conclusion
Maintaining a clear understanding of file dependencies is crucial for the stability and functionality of the resume tailoring application. Adhering to these guidelines will help prevent issues and ensure a smooth development process.

